/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {
  GradeEnum: 'A' | 'B' | 'C';
  StatusEnum: 'PENDING' | 'REVIEWED' | 'WAITING_FOR_REVIEW';
}

export interface NexusGenRootTypes {
  Challenge: {
    // root type
    comment?: string | null; // String
    description: string; // String!
    grade?: NexusGenEnums['GradeEnum'] | null; // GradeEnum
    incrementId: number; // Int!
    reviewer: NexusGenRootTypes['Reviewer']; // Reviewer!
    solution?: string | null; // String
    status: NexusGenEnums['StatusEnum']; // StatusEnum!
    student: NexusGenRootTypes['Student']; // Student!
  };
  Mutation: {};
  Query: {};
  Reviewer: {
    // root type
    incrementId: number; // Int!
    name: string; // String!
  };
  Student: {
    // root type
    incrementId: number; // Int!
    name: string; // String!
  };
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  GradeEnum: NexusGenEnums['GradeEnum'];
  StatusEnum: NexusGenEnums['StatusEnum'];
}

export interface NexusGenFieldTypes {
  Challenge: {
    // field return type
    comment: string | null; // String
    description: string; // String!
    grade: NexusGenEnums['GradeEnum'] | null; // GradeEnum
    incrementId: number; // Int!
    reviewer: NexusGenRootTypes['Reviewer']; // Reviewer!
    solution: string | null; // String
    status: NexusGenEnums['StatusEnum']; // StatusEnum!
    student: NexusGenRootTypes['Student']; // Student!
  };
  Mutation: {
    // field return type
    createChallenge: NexusGenRootTypes['Challenge']; // Challenge!
    createReviewer: NexusGenRootTypes['Reviewer']; // Reviewer!
    createStudent: NexusGenRootTypes['Student']; // Student!
    reviewChallenge: NexusGenRootTypes['Challenge']; // Challenge!
    submitChallenge: NexusGenRootTypes['Challenge']; // Challenge!
  };
  Query: {
    // field return type
    challenges: NexusGenRootTypes['Challenge'][]; // [Challenge!]!
    healtCheck: string; // String!
    reviewers: NexusGenRootTypes['Reviewer'][]; // [Reviewer!]!
    students: NexusGenRootTypes['Student'][]; // [Student!]!
  };
  Reviewer: {
    // field return type
    incrementId: number; // Int!
    name: string; // String!
  };
  Student: {
    // field return type
    incrementId: number; // Int!
    name: string; // String!
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    createChallenge: {
      // args
      description: string; // String!
      reviewerId: number; // Int!
      studentId: number; // Int!
    };
    createReviewer: {
      // args
      name: string; // String!
    };
    createStudent: {
      // args
      name: string; // String!
    };
    reviewChallenge: {
      // args
      challengeId: number; // Int!
      comment?: string | null; // String
      grade: NexusGenEnums['GradeEnum']; // GradeEnum!
      reviewerId: number; // Int!
    };
    submitChallenge: {
      // args
      challengeId: number; // Int!
      solution: string; // String!
      studentId: number; // Int!
    };
  };
  Query: {
    challenges: {
      // args
      challengeId?: number | null; // Int
      grade?: NexusGenEnums['GradeEnum'] | null; // GradeEnum
      reviewerId?: number | null; // Int
      status?: NexusGenEnums['StatusEnum'] | null; // StatusEnum
      studentId?: number | null; // Int
    };
    reviewers: {
      // args
      id?: number | null; // Int
    };
    students: {
      // args
      id?: number | null; // Int
    };
  };
}

export interface NexusGenAbstractResolveReturnTypes {}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = 'Challenge' | 'Mutation' | 'Query' | 'Reviewer' | 'Student';

export type NexusGenInputNames = never;

export type NexusGenEnumNames = 'GradeEnum' | 'StatusEnum';

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = 'Boolean' | 'Float' | 'ID' | 'Int' | 'String';

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
